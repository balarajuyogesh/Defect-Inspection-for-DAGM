node {
  name: "DAGM/training"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "DAGM/input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "DAGM/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 13
        }
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d/kernel"
  input: "DAGM/conv2d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/Conv2D"
  op: "Conv2D"
  input: "DAGM/input"
  input: "DAGM/conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/gamma"
  input: "DAGM/batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/beta"
  input: "DAGM/batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/moving_mean"
  input: "DAGM/batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/moving_variance"
  input: "DAGM/batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d/Conv2D"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization/gamma/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization/beta/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization/cond/Const"
  input: "DAGM/batch_normalization/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d/Conv2D"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization/gamma/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization/beta/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization/moving_mean/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization/moving_variance/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization/ExpandDims/input"
  input: "DAGM/batch_normalization/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization/ExpandDims_1/input"
  input: "DAGM/batch_normalization/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization/Select"
  op: "Select"
  input: "DAGM/batch_normalization/Reshape"
  input: "DAGM/batch_normalization/ExpandDims"
  input: "DAGM/batch_normalization/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization/AssignMovingAvg/read"
  input: "DAGM/batch_normalization/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization/moving_mean"
  input: "DAGM/batch_normalization/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization/moving_variance"
  input: "DAGM/batch_normalization/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu"
  op: "Relu"
  input: "DAGM/batch_normalization/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 75
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_1/kernel"
  input: "DAGM/conv2d_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_2/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu"
  input: "DAGM/conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/gamma"
  input: "DAGM/batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/beta"
  input: "DAGM/batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/moving_mean"
  input: "DAGM/batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/moving_variance"
  input: "DAGM/batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_2/Conv2D"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_1/gamma/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_1/beta/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_2/cond/Const"
  input: "DAGM/batch_normalization_2/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_2/Conv2D"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_1/gamma/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_1/beta/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_1/moving_mean/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_1/moving_variance/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_2/ExpandDims/input"
  input: "DAGM/batch_normalization_2/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_2/ExpandDims_1/input"
  input: "DAGM/batch_normalization_2/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/Select"
  op: "Select"
  input: "DAGM/batch_normalization_2/Reshape"
  input: "DAGM/batch_normalization_2/ExpandDims"
  input: "DAGM/batch_normalization_2/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_2/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_2/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_2/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_2/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_2/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_1/moving_mean"
  input: "DAGM/batch_normalization_2/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_2/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_2/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_2/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_2/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_1/moving_variance"
  input: "DAGM/batch_normalization_2/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_1"
  op: "Relu"
  input: "DAGM/batch_normalization_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/max_pooling2d/MaxPool"
  op: "MaxPool"
  input: "DAGM/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 145
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_2/kernel"
  input: "DAGM/conv2d_2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_3/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/Conv2D"
  op: "Conv2D"
  input: "DAGM/max_pooling2d/MaxPool"
  input: "DAGM/conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/gamma"
  input: "DAGM/batch_normalization_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/beta"
  input: "DAGM/batch_normalization_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/moving_mean"
  input: "DAGM/batch_normalization_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/moving_variance"
  input: "DAGM/batch_normalization_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_3/Conv2D"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_2/gamma/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_2/beta/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_3/cond/Const"
  input: "DAGM/batch_normalization_3/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_3/Conv2D"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_2/gamma/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_2/beta/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_2/moving_mean/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_2/moving_variance/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_3/ExpandDims/input"
  input: "DAGM/batch_normalization_3/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_3/ExpandDims_1/input"
  input: "DAGM/batch_normalization_3/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/Select"
  op: "Select"
  input: "DAGM/batch_normalization_3/Reshape"
  input: "DAGM/batch_normalization_3/ExpandDims"
  input: "DAGM/batch_normalization_3/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_3/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_3/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_3/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_3/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_3/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_2/moving_mean"
  input: "DAGM/batch_normalization_3/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_3/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_3/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_3/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_3/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_2/moving_variance"
  input: "DAGM/batch_normalization_3/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_2"
  op: "Relu"
  input: "DAGM/batch_normalization_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 214
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_3/kernel"
  input: "DAGM/conv2d_3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_4/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu_2"
  input: "DAGM/conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/gamma"
  input: "DAGM/batch_normalization_3/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/beta"
  input: "DAGM/batch_normalization_3/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/moving_mean"
  input: "DAGM/batch_normalization_3/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/moving_variance"
  input: "DAGM/batch_normalization_3/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_4/Conv2D"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_3/gamma/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_3/beta/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_4/cond/Const"
  input: "DAGM/batch_normalization_4/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_4/Conv2D"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_3/gamma/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_3/beta/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_3/moving_mean/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_3/moving_variance/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_4/ExpandDims/input"
  input: "DAGM/batch_normalization_4/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_4/ExpandDims_1/input"
  input: "DAGM/batch_normalization_4/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/Select"
  op: "Select"
  input: "DAGM/batch_normalization_4/Reshape"
  input: "DAGM/batch_normalization_4/ExpandDims"
  input: "DAGM/batch_normalization_4/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_4/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_4/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_4/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_4/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_4/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_3/moving_mean"
  input: "DAGM/batch_normalization_4/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_4/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_4/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_4/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_4/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_3/moving_variance"
  input: "DAGM/batch_normalization_4/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_3"
  op: "Relu"
  input: "DAGM/batch_normalization_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "DAGM/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084301
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 284
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_4/kernel"
  input: "DAGM/conv2d_4/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_5/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_5/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/Conv2D"
  op: "Conv2D"
  input: "DAGM/max_pooling2d_2/MaxPool"
  input: "DAGM/conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/gamma"
  input: "DAGM/batch_normalization_4/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/beta"
  input: "DAGM/batch_normalization_4/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/moving_mean"
  input: "DAGM/batch_normalization_4/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/moving_variance"
  input: "DAGM/batch_normalization_4/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_5/Conv2D"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_4/gamma/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_4/beta/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_5/cond/Const"
  input: "DAGM/batch_normalization_5/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_5/Conv2D"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_4/gamma/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_4/beta/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_4/moving_mean/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_4/moving_variance/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_5/ExpandDims/input"
  input: "DAGM/batch_normalization_5/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_5/ExpandDims_1/input"
  input: "DAGM/batch_normalization_5/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/Select"
  op: "Select"
  input: "DAGM/batch_normalization_5/Reshape"
  input: "DAGM/batch_normalization_5/ExpandDims"
  input: "DAGM/batch_normalization_5/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_5/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_5/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_5/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_5/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_5/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_4/moving_mean"
  input: "DAGM/batch_normalization_5/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_5/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_5/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_5/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_5/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_4/moving_variance"
  input: "DAGM/batch_normalization_5/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_4"
  op: "Relu"
  input: "DAGM/batch_normalization_5/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 353
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_5/kernel"
  input: "DAGM/conv2d_5/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_6/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_6/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu_4"
  input: "DAGM/conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/gamma"
  input: "DAGM/batch_normalization_5/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/beta"
  input: "DAGM/batch_normalization_5/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/moving_mean"
  input: "DAGM/batch_normalization_5/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/moving_variance"
  input: "DAGM/batch_normalization_5/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_6/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_6/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_6/Conv2D"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_5/gamma/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_5/beta/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_6/cond/Const"
  input: "DAGM/batch_normalization_6/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_6/Conv2D"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_5/gamma/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_5/beta/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_5/moving_mean/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_5/moving_variance/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_6/ExpandDims/input"
  input: "DAGM/batch_normalization_6/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_6/ExpandDims_1/input"
  input: "DAGM/batch_normalization_6/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_6/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/Select"
  op: "Select"
  input: "DAGM/batch_normalization_6/Reshape"
  input: "DAGM/batch_normalization_6/ExpandDims"
  input: "DAGM/batch_normalization_6/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_6/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_6/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_6/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_6/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_6/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_5/moving_mean"
  input: "DAGM/batch_normalization_6/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_6/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_6/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_6/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_6/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_5/moving_variance"
  input: "DAGM/batch_normalization_6/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_5"
  op: "Relu"
  input: "DAGM/batch_normalization_6/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 422
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_6/kernel"
  input: "DAGM/conv2d_6/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_7/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_7/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu_5"
  input: "DAGM/conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/gamma"
  input: "DAGM/batch_normalization_6/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/beta"
  input: "DAGM/batch_normalization_6/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/moving_mean"
  input: "DAGM/batch_normalization_6/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/moving_variance"
  input: "DAGM/batch_normalization_6/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_7/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_7/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_7/Conv2D"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_6/gamma/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_6/beta/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_7/cond/Const"
  input: "DAGM/batch_normalization_7/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_7/Conv2D"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_6/gamma/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_6/beta/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_6/moving_mean/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_6/moving_variance/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_7/ExpandDims/input"
  input: "DAGM/batch_normalization_7/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_7/ExpandDims_1/input"
  input: "DAGM/batch_normalization_7/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_7/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/Select"
  op: "Select"
  input: "DAGM/batch_normalization_7/Reshape"
  input: "DAGM/batch_normalization_7/ExpandDims"
  input: "DAGM/batch_normalization_7/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_7/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_7/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_7/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_7/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_7/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_6/moving_mean"
  input: "DAGM/batch_normalization_7/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_7/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_7/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_7/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_7/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_6/moving_variance"
  input: "DAGM/batch_normalization_7/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_6"
  op: "Relu"
  input: "DAGM/batch_normalization_7/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03608439117670059
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03608439117670059
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 491
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_7/kernel"
  input: "DAGM/conv2d_7/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_8/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_8/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu_6"
  input: "DAGM/conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/gamma"
  input: "DAGM/batch_normalization_7/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/beta"
  input: "DAGM/batch_normalization_7/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/moving_mean"
  input: "DAGM/batch_normalization_7/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/moving_variance"
  input: "DAGM/batch_normalization_7/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_8/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_8/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_8/Conv2D"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_7/gamma/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_7/beta/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_8/cond/Const"
  input: "DAGM/batch_normalization_8/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_8/Conv2D"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_7/gamma/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_7/beta/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_7/moving_mean/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_7/moving_variance/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_8/ExpandDims/input"
  input: "DAGM/batch_normalization_8/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_8/ExpandDims_1/input"
  input: "DAGM/batch_normalization_8/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_8/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/Select"
  op: "Select"
  input: "DAGM/batch_normalization_8/Reshape"
  input: "DAGM/batch_normalization_8/ExpandDims"
  input: "DAGM/batch_normalization_8/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_8/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_8/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_8/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_8/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_8/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_7/moving_mean"
  input: "DAGM/batch_normalization_8/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_8/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_8/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_8/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_8/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_7/moving_variance"
  input: "DAGM/batch_normalization_8/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_7"
  op: "Relu"
  input: "DAGM/batch_normalization_8/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/max_pooling2d_3/MaxPool"
  op: "MaxPool"
  input: "DAGM/Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 561
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_8/kernel"
  input: "DAGM/conv2d_8/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_9/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_9/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/Conv2D"
  op: "Conv2D"
  input: "DAGM/max_pooling2d_3/MaxPool"
  input: "DAGM/conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/gamma"
  input: "DAGM/batch_normalization_8/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/beta"
  input: "DAGM/batch_normalization_8/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/moving_mean"
  input: "DAGM/batch_normalization_8/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/moving_variance"
  input: "DAGM/batch_normalization_8/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_9/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_9/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_9/Conv2D"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_8/gamma/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_8/beta/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_9/cond/Const"
  input: "DAGM/batch_normalization_9/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_9/Conv2D"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_8/gamma/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_8/beta/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_8/moving_mean/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_8/moving_variance/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_9/ExpandDims/input"
  input: "DAGM/batch_normalization_9/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_9/ExpandDims_1/input"
  input: "DAGM/batch_normalization_9/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_9/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/Select"
  op: "Select"
  input: "DAGM/batch_normalization_9/Reshape"
  input: "DAGM/batch_normalization_9/ExpandDims"
  input: "DAGM/batch_normalization_9/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_9/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_9/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_9/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_9/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_9/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_8/moving_mean"
  input: "DAGM/batch_normalization_9/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_9/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_9/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_9/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_9/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_8/moving_variance"
  input: "DAGM/batch_normalization_9/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_8"
  op: "Relu"
  input: "DAGM/batch_normalization_9/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 630
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_9/kernel"
  input: "DAGM/conv2d_9/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_10/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_10/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu_8"
  input: "DAGM/conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/gamma"
  input: "DAGM/batch_normalization_9/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/beta"
  input: "DAGM/batch_normalization_9/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/moving_mean"
  input: "DAGM/batch_normalization_9/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/moving_variance"
  input: "DAGM/batch_normalization_9/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_10/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_10/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_10/Conv2D"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_9/gamma/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_9/beta/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_10/cond/Const"
  input: "DAGM/batch_normalization_10/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_10/Conv2D"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_9/gamma/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_9/beta/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_9/moving_mean/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_9/moving_variance/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_10/ExpandDims/input"
  input: "DAGM/batch_normalization_10/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_10/ExpandDims_1/input"
  input: "DAGM/batch_normalization_10/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_10/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/Select"
  op: "Select"
  input: "DAGM/batch_normalization_10/Reshape"
  input: "DAGM/batch_normalization_10/ExpandDims"
  input: "DAGM/batch_normalization_10/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_10/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_10/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_10/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_10/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_10/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_9/moving_mean"
  input: "DAGM/batch_normalization_10/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_10/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_10/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_10/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_10/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_9/moving_variance"
  input: "DAGM/batch_normalization_10/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_9"
  op: "Relu"
  input: "DAGM/batch_normalization_10/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025515519082546234
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025515519082546234
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 699
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/max"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/mul"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Assign"
  op: "Assign"
  input: "DAGM/conv2d_10/kernel"
  input: "DAGM/conv2d_10/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/read"
  op: "Identity"
  input: "DAGM/conv2d_10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_11/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/conv2d_11/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/conv2d_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_11/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/conv2d_11/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/conv2d_11/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_11/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_11/Conv2D"
  op: "Conv2D"
  input: "DAGM/Relu_9"
  input: "DAGM/conv2d_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/gamma"
  input: "DAGM/batch_normalization_10/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/beta"
  input: "DAGM/batch_normalization_10/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/moving_mean"
  input: "DAGM/batch_normalization_10/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/moving_variance"
  input: "DAGM/batch_normalization_10/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/Switch"
  op: "Switch"
  input: "DAGM/training"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/switch_t"
  op: "Identity"
  input: "DAGM/batch_normalization_11/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/switch_f"
  op: "Identity"
  input: "DAGM/batch_normalization_11/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/pred_id"
  op: "Identity"
  input: "DAGM/training"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/Const"
  op: "Const"
  input: "^DAGM/batch_normalization_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "DAGM/conv2d_11/Conv2D"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_11/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_10/gamma/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_10/beta/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_2:1"
  input: "DAGM/batch_normalization_11/cond/Const"
  input: "DAGM/batch_normalization_11/cond/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch"
  op: "Switch"
  input: "DAGM/conv2d_11/Conv2D"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_11/Conv2D"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_10/gamma/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_10/beta/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_3"
  op: "Switch"
  input: "DAGM/batch_normalization_10/moving_mean/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_10/moving_variance/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_2"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/Merge"
  op: "Merge"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/Merge_1"
  op: "Merge"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1:1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/cond/Merge_2"
  op: "Merge"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1:2"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/ExpandDims/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_11/ExpandDims/input"
  input: "DAGM/batch_normalization_11/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_11/ExpandDims_1/input"
  input: "DAGM/batch_normalization_11/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_11/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/Select"
  op: "Select"
  input: "DAGM/batch_normalization_11/Reshape"
  input: "DAGM/batch_normalization_11/ExpandDims"
  input: "DAGM/batch_normalization_11/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_11/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_11/AssignMovingAvg/read"
  input: "DAGM/batch_normalization_11/cond/Merge_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_11/AssignMovingAvg/Sub"
  input: "DAGM/batch_normalization_11/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_10/moving_mean"
  input: "DAGM/batch_normalization_11/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "DAGM/batch_normalization_11/AssignMovingAvg_1/read"
  input: "DAGM/batch_normalization_11/cond/Merge_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "DAGM/batch_normalization_11/AssignMovingAvg_1/Sub"
  input: "DAGM/batch_normalization_11/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_10/moving_variance"
  input: "DAGM/batch_normalization_11/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/Relu_10"
  op: "Relu"
  input: "DAGM/batch_normalization_11/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/max_pooling2d_4/MaxPool"
  op: "MaxPool"
  input: "DAGM/Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "DAGM/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\010\000\000"
      }
    }
  }
}
node {
  name: "DAGM/Reshape"
  op: "Reshape"
  input: "DAGM/max_pooling2d_4/MaxPool"
  input: "DAGM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04419417306780815
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04419417306780815
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 771
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/dense/kernel/Initializer/random_uniform/max"
  input: "DAGM/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/dense/kernel/Initializer/random_uniform/mul"
  input: "DAGM/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense/kernel/Assign"
  op: "Assign"
  input: "DAGM/dense/kernel"
  input: "DAGM/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense/kernel/read"
  op: "Identity"
  input: "DAGM/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/dense/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/dense/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/MatMul"
  op: "MatMul"
  input: "DAGM/Reshape"
  input: "DAGM/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/gamma"
  input: "DAGM/batch_normalization_11/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/beta"
  input: "DAGM/batch_normalization_11/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_mean/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/moving_mean"
  input: "DAGM/batch_normalization_11/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_mean/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_variance/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/moving_variance"
  input: "DAGM/batch_normalization_11/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/moving_variance/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/mean"
  op: "Mean"
  input: "DAGM/dense/MatMul"
  input: "DAGM/batch_normalization_12/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/StopGradient"
  op: "StopGradient"
  input: "DAGM/batch_normalization_12/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "DAGM/dense/MatMul"
  input: "DAGM/batch_normalization_12/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/variance"
  op: "Mean"
  input: "DAGM/batch_normalization_12/moments/SquaredDifference"
  input: "DAGM/batch_normalization_12/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_12/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/moments/Squeeze_1"
  op: "Squeeze"
  input: "DAGM/batch_normalization_12/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_12/moments/Squeeze"
  input: "DAGM/batch_normalization_12/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_1"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_11/moving_mean/read"
  input: "DAGM/batch_normalization_12/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Reshape"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_12/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Select"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape"
  input: "DAGM/batch_normalization_12/ExpandDims"
  input: "DAGM/batch_normalization_12/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Squeeze"
  op: "Squeeze"
  input: "DAGM/batch_normalization_12/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_2"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_12/moments/Squeeze_1"
  input: "DAGM/batch_normalization_12/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_3"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_11/moving_variance/read"
  input: "DAGM/batch_normalization_12/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Reshape_1"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_12/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Select_1"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape_1"
  input: "DAGM/batch_normalization_12/ExpandDims_2"
  input: "DAGM/batch_normalization_12/ExpandDims_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Squeeze_1"
  op: "Squeeze"
  input: "DAGM/batch_normalization_12/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_4/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_4"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_12/ExpandDims_4/input"
  input: "DAGM/batch_normalization_12/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_5/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/ExpandDims_5"
  op: "ExpandDims"
  input: "DAGM/batch_normalization_12/ExpandDims_5/input"
  input: "DAGM/batch_normalization_12/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Reshape_2"
  op: "Reshape"
  input: "DAGM/training"
  input: "DAGM/batch_normalization_12/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Select_2"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape_2"
  input: "DAGM/batch_normalization_12/ExpandDims_4"
  input: "DAGM/batch_normalization_12/ExpandDims_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/Squeeze_2"
  op: "Squeeze"
  input: "DAGM/batch_normalization_12/Select_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg/sub"
  op: "Sub"
  input: "DAGM/batch_normalization_12/AssignMovingAvg/sub/x"
  input: "DAGM/batch_normalization_12/Squeeze_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "DAGM/batch_normalization_11/moving_mean/read"
  input: "DAGM/batch_normalization_12/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg/mul"
  op: "Mul"
  input: "DAGM/batch_normalization_12/AssignMovingAvg/sub_1"
  input: "DAGM/batch_normalization_12/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg"
  op: "AssignSub"
  input: "DAGM/batch_normalization_11/moving_mean"
  input: "DAGM/batch_normalization_12/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DAGM/batch_normalization_12/AssignMovingAvg_1/sub/x"
  input: "DAGM/batch_normalization_12/Squeeze_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "DAGM/batch_normalization_11/moving_variance/read"
  input: "DAGM/batch_normalization_12/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DAGM/batch_normalization_12/AssignMovingAvg_1/sub_1"
  input: "DAGM/batch_normalization_12/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DAGM/batch_normalization_11/moving_variance"
  input: "DAGM/batch_normalization_12/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/add"
  op: "Add"
  input: "DAGM/batch_normalization_12/Squeeze_1"
  input: "DAGM/batch_normalization_12/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "DAGM/batch_normalization_12/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/mul"
  op: "Mul"
  input: "DAGM/batch_normalization_12/batchnorm/Rsqrt"
  input: "DAGM/batch_normalization_11/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/mul_1"
  op: "Mul"
  input: "DAGM/dense/MatMul"
  input: "DAGM/batch_normalization_12/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/mul_2"
  op: "Mul"
  input: "DAGM/batch_normalization_12/Squeeze"
  input: "DAGM/batch_normalization_12/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/sub"
  op: "Sub"
  input: "DAGM/batch_normalization_11/beta/read"
  input: "DAGM/batch_normalization_12/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/batch_normalization_12/batchnorm/add_1"
  op: "Add"
  input: "DAGM/batch_normalization_12/batchnorm/mul_1"
  input: "DAGM/batch_normalization_12/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/Relu_11"
  op: "Relu"
  input: "DAGM/batch_normalization_12/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07606524229049683
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07606524229049683
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 777
    }
  }
  attr {
    key: "seed2"
    value {
      i: 854
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/max"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/mul"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Assign"
  op: "Assign"
  input: "DAGM/dense_1/kernel"
  input: "DAGM/dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/read"
  op: "Identity"
  input: "DAGM/dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/dense_2/kernel/Regularizer/l2_regularizer/scale"
  input: "DAGM/dense_2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense_1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Assign"
  op: "Assign"
  input: "DAGM/dense_1/bias"
  input: "DAGM/dense_1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense_1/bias/read"
  op: "Identity"
  input: "DAGM/dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
}
node {
  name: "DAGM/dense_2/bias/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "DAGM/dense_2/bias/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "DAGM/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
}
node {
  name: "DAGM/dense_2/bias/Regularizer/l2_regularizer"
  op: "Mul"
  input: "DAGM/dense_2/bias/Regularizer/l2_regularizer/scale"
  input: "DAGM/dense_2/bias/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
}
node {
  name: "DAGM/dense_2/MatMul"
  op: "MatMul"
  input: "DAGM/Relu_11"
  input: "DAGM/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DAGM/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "DAGM/dense_2/MatMul"
  input: "DAGM/dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "prob"
  op: "Softmax"
  input: "DAGM/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "result/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "result"
  op: "ArgMax"
  input: "DAGM/dense_2/BiasAdd"
  input: "result/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "DAGM/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "DAGM/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub"
  op: "Sub"
  input: "Rank_1"
  input: "Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/begin"
  op: "Pack"
  input: "Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Shape_1"
  input: "Slice/begin"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "concat/values_0"
  input: "Slice"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "DAGM/dense_2/BiasAdd"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Shape"
  input: "DAGM/Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_1"
  op: "Sub"
  input: "Rank_2"
  input: "Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "Shape_2"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "concat_1/values_0"
  input: "Slice_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "DAGM/Placeholder"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "SoftmaxCrossEntropyWithLogits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "Reshape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_2"
  op: "Sub"
  input: "Rank"
  input: "Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_2/size"
  op: "Pack"
  input: "Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_2"
  op: "Slice"
  input: "Shape"
  input: "Slice_2/begin"
  input: "Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "SoftmaxCrossEntropyWithLogits"
  input: "Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Reshape_2"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "Reshape_2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "Reshape_2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Mean_grad/Shape_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Reshape_2_grad/Shape"
  op: "Shape"
  input: "SoftmaxCrossEntropyWithLogits"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "SoftmaxCrossEntropyWithLogits:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/Reshape_2_grad/Reshape"
  input: "gradients/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "DAGM/dense_2/BiasAdd"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/SoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/Reshape_grad/Reshape"
  input: "^gradients/DAGM/dense_2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/DAGM/dense_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Reshape_grad/Reshape"
  input: "^gradients/DAGM/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/DAGM/dense_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/DAGM/dense_2/BiasAdd_grad/tuple/control_dependency"
  input: "DAGM/dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DAGM/Relu_11"
  input: "gradients/DAGM/dense_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/dense_2/MatMul_grad/MatMul"
  input: "^gradients/DAGM/dense_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/DAGM/dense_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/dense_2/MatMul_grad/MatMul"
  input: "^gradients/DAGM/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/dense_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/DAGM/dense_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/dense_2/MatMul_grad/MatMul_1"
  input: "^gradients/DAGM/dense_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_11_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/dense_2/MatMul_grad/tuple/control_dependency"
  input: "DAGM/Relu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "DAGM/batch_normalization_12/batchnorm/mul_1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/Relu_11_grad/ReluGrad"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/Relu_11_grad/ReluGrad"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Sum_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "DAGM/dense/MatMul"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_12/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/mul"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "DAGM/dense/MatMul"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/mul_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Neg"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_12/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/mul"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "DAGM/batch_normalization_12/Squeeze"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/mul_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Sum_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Squeeze_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/DAGM/batch_normalization_12/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "DAGM/batch_normalization_11/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/mul"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "DAGM/batch_normalization_12/batchnorm/Rsqrt"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/mul_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Sum_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_grad/zeros_like"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_grad/Select"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape"
  input: "gradients/DAGM/batch_normalization_12/Squeeze_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_grad/Select_1"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape"
  input: "gradients/DAGM/batch_normalization_12/Select_grad/zeros_like"
  input: "gradients/DAGM/batch_normalization_12/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/Select_grad/Select"
  input: "^gradients/DAGM/batch_normalization_12/Select_grad/Select_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/Select_grad/Select"
  input: "^gradients/DAGM/batch_normalization_12/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/Select_grad/Select_1"
  input: "^gradients/DAGM/batch_normalization_12/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "DAGM/batch_normalization_12/batchnorm/Rsqrt"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/ExpandDims_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/Select_grad/tuple/control_dependency"
  input: "gradients/DAGM/batch_normalization_12/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Sum_1"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape_1"
  input: "^gradients/DAGM/batch_normalization_12/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/Squeeze_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/ExpandDims_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/DAGM/batch_normalization_12/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_1_grad/zeros_like"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_1_grad/Select"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape_1"
  input: "gradients/DAGM/batch_normalization_12/Squeeze_1_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_1_grad/Select_1"
  op: "Select"
  input: "DAGM/batch_normalization_12/Reshape_1"
  input: "gradients/DAGM/batch_normalization_12/Select_1_grad/zeros_like"
  input: "gradients/DAGM/batch_normalization_12/Squeeze_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/Select_1_grad/Select"
  input: "^gradients/DAGM/batch_normalization_12/Select_1_grad/Select_1"
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/Select_1_grad/Select"
  input: "^gradients/DAGM/batch_normalization_12/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/Select_1_grad/Select_1"
  input: "^gradients/DAGM/batch_normalization_12/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/ExpandDims_2_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/ExpandDims_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/Select_1_grad/tuple/control_dependency"
  input: "gradients/DAGM/batch_normalization_12/ExpandDims_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/Squeeze_1_grad/Shape"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/ExpandDims_2_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
  op: "Shape"
  input: "DAGM/batch_normalization_12/moments/SquaredDifference"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Size"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/add"
  op: "Add"
  input: "DAGM/batch_normalization_12/moments/variance/reduction_indices"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/add"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/range/start"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/range/delta"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/range"
  op: "Range"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/range/start"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Size"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Fill/value"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_1"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/range"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/mod"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum/y"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/DynamicStitch"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/Squeeze_1_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "DAGM/batch_normalization_12/moments/SquaredDifference"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_3"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Prod"
  op: "Prod"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_3"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum_1/y"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Prod_1"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Prod"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/variance_grad/Shape_2"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Cast"
  op: "Cast"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Tile"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "DAGM/dense/MatMul"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/moments/variance_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/scalar"
  input: "gradients/DAGM/batch_normalization_12/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "DAGM/dense/MatMul"
  input: "DAGM/batch_normalization_12/moments/StopGradient"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/mul"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/mul_1"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Sum"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/mul_1"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Neg"
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Neg"
  input: "^gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
  op: "Shape"
  input: "DAGM/dense/MatMul"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Size"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/add"
  op: "Add"
  input: "DAGM/batch_normalization_12/moments/mean/reduction_indices"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/add"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/range/start"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/range/delta"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/range"
  op: "Range"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/range/start"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Size"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Fill/value"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_1"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/range"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/mod"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum/y"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/DynamicStitch"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/Squeeze_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Reshape"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "DAGM/dense/MatMul"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_3"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Prod"
  op: "Prod"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Const_1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_3"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum_1/y"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Prod_1"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Prod"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/moments/mean_grad/Shape_2"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Cast"
  op: "Cast"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_12/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Tile"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/DAGM/batch_normalization_12/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/DAGM/batch_normalization_12/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_12/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/DAGM/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AddN_1"
  input: "DAGM/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DAGM/Reshape"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/dense/MatMul_grad/MatMul"
  input: "^gradients/DAGM/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/DAGM/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/dense/MatMul_grad/MatMul"
  input: "^gradients/DAGM/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/dense/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/DAGM/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/dense/MatMul_grad/MatMul_1"
  input: "^gradients/DAGM/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/dense/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Reshape_grad/Shape"
  op: "Shape"
  input: "DAGM/max_pooling2d_4/MaxPool"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/DAGM/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/DAGM/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "DAGM/Relu_10"
  input: "DAGM/max_pooling2d_4/MaxPool"
  input: "gradients/DAGM/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_10_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  input: "DAGM/Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_10_grad/ReluGrad"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_10_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_11/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_10_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_10_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_11/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_11/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "DAGM/conv2d_11/Conv2D"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Shape"
  input: "gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/Shape_1"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "DAGM/batch_normalization_10/gamma/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_2"
  op: "Shape"
  input: "gradients/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/Shape_2"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "DAGM/batch_normalization_10/beta/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_3"
  op: "Shape"
  input: "gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_2/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_2"
  op: "Fill"
  input: "gradients/Shape_3"
  input: "gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "DAGM/conv2d_11/Conv2D"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_4"
  op: "Shape"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_3/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_3"
  op: "Fill"
  input: "gradients/Shape_4"
  input: "gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "DAGM/batch_normalization_10/gamma/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_5"
  op: "Shape"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_4/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_4"
  op: "Fill"
  input: "gradients/Shape_5"
  input: "gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "DAGM/batch_normalization_10/beta/read"
  input: "DAGM/batch_normalization_11/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_6"
  op: "Shape"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_5/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_5"
  op: "Fill"
  input: "gradients/Shape_6"
  input: "gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu_9"
  input: "DAGM/conv2d_10/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_11/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_10/kernel/read"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu_9"
  input: "gradients/DAGM/conv2d_11/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_11/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_11/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_11/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_11/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_11/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_9_grad/ReluGrad"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_9_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_10/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_9_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_9_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_10/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_10/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "DAGM/conv2d_10/Conv2D"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_7"
  op: "Shape"
  input: "gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_6/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_6"
  op: "Fill"
  input: "gradients/Shape_7"
  input: "gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "DAGM/batch_normalization_9/gamma/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_8"
  op: "Shape"
  input: "gradients/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_7/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_7"
  op: "Fill"
  input: "gradients/Shape_8"
  input: "gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_8"
  op: "Switch"
  input: "DAGM/batch_normalization_9/beta/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_9"
  op: "Shape"
  input: "gradients/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_8/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_8"
  op: "Fill"
  input: "gradients/Shape_9"
  input: "gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_9"
  op: "Switch"
  input: "DAGM/conv2d_10/Conv2D"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_10"
  op: "Shape"
  input: "gradients/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_9/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_9"
  op: "Fill"
  input: "gradients/Shape_10"
  input: "gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_10"
  op: "Switch"
  input: "DAGM/batch_normalization_9/gamma/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_11"
  op: "Shape"
  input: "gradients/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_10/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_10"
  op: "Fill"
  input: "gradients/Shape_11"
  input: "gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_11"
  op: "Switch"
  input: "DAGM/batch_normalization_9/beta/read"
  input: "DAGM/batch_normalization_10/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_12"
  op: "Shape"
  input: "gradients/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_11/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_11"
  op: "Fill"
  input: "gradients/Shape_12"
  input: "gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu_8"
  input: "DAGM/conv2d_9/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_10/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_9/kernel/read"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu_8"
  input: "gradients/DAGM/conv2d_10/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_10/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_10/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_10/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_10/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_10/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_8_grad/ReluGrad"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_8_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_9/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_8_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_8_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_9/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_9/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_12"
  op: "Switch"
  input: "DAGM/conv2d_9/Conv2D"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_13"
  op: "Shape"
  input: "gradients/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_12/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_12"
  op: "Fill"
  input: "gradients/Shape_13"
  input: "gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_13"
  op: "Switch"
  input: "DAGM/batch_normalization_8/gamma/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_14"
  op: "Shape"
  input: "gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_13/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_13"
  op: "Fill"
  input: "gradients/Shape_14"
  input: "gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_14"
  op: "Switch"
  input: "DAGM/batch_normalization_8/beta/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_15"
  op: "Shape"
  input: "gradients/Switch_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_14/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_14"
  op: "Fill"
  input: "gradients/Shape_15"
  input: "gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_15"
  op: "Switch"
  input: "DAGM/conv2d_9/Conv2D"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_16"
  op: "Shape"
  input: "gradients/Switch_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_15/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_15"
  op: "Fill"
  input: "gradients/Shape_16"
  input: "gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_16"
  op: "Switch"
  input: "DAGM/batch_normalization_8/gamma/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_17"
  op: "Shape"
  input: "gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_16/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_16"
  op: "Fill"
  input: "gradients/Shape_17"
  input: "gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_16"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_17"
  op: "Switch"
  input: "DAGM/batch_normalization_8/beta/read"
  input: "DAGM/batch_normalization_9/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_18"
  op: "Shape"
  input: "gradients/Switch_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_17/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_17"
  op: "Fill"
  input: "gradients/Shape_18"
  input: "gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/max_pooling2d_3/MaxPool"
  input: "DAGM/conv2d_8/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_9/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_8/kernel/read"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/max_pooling2d_3/MaxPool"
  input: "gradients/DAGM/conv2d_9/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_9/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_9/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_9/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_9/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "DAGM/Relu_7"
  input: "DAGM/max_pooling2d_3/MaxPool"
  input: "gradients/DAGM/conv2d_9/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  input: "DAGM/Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_7_grad/ReluGrad"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_7_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_8/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_7_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_7_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_8/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_8/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_18"
  op: "Switch"
  input: "DAGM/conv2d_8/Conv2D"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_19"
  op: "Shape"
  input: "gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_18/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_18"
  op: "Fill"
  input: "gradients/Shape_19"
  input: "gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_19"
  op: "Switch"
  input: "DAGM/batch_normalization_7/gamma/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_20"
  op: "Shape"
  input: "gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_19/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_19"
  op: "Fill"
  input: "gradients/Shape_20"
  input: "gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_20"
  op: "Switch"
  input: "DAGM/batch_normalization_7/beta/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_21"
  op: "Shape"
  input: "gradients/Switch_20:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_20/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_20"
  op: "Fill"
  input: "gradients/Shape_21"
  input: "gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_20"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_21"
  op: "Switch"
  input: "DAGM/conv2d_8/Conv2D"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_22"
  op: "Shape"
  input: "gradients/Switch_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_21/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_21"
  op: "Fill"
  input: "gradients/Shape_22"
  input: "gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_22"
  op: "Switch"
  input: "DAGM/batch_normalization_7/gamma/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_23"
  op: "Shape"
  input: "gradients/Switch_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_22/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_22"
  op: "Fill"
  input: "gradients/Shape_23"
  input: "gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_22"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_23"
  op: "Switch"
  input: "DAGM/batch_normalization_7/beta/read"
  input: "DAGM/batch_normalization_8/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_24"
  op: "Shape"
  input: "gradients/Switch_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_23/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_23"
  op: "Fill"
  input: "gradients/Shape_24"
  input: "gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_23"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu_6"
  input: "DAGM/conv2d_7/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_8/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_7/kernel/read"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu_6"
  input: "gradients/DAGM/conv2d_8/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_8/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_8/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_8/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_8/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_8/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_6_grad/ReluGrad"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_6_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_7/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_6_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_6_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_7/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_7/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_24"
  op: "Switch"
  input: "DAGM/conv2d_7/Conv2D"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_25"
  op: "Shape"
  input: "gradients/Switch_24:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_24/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_24"
  op: "Fill"
  input: "gradients/Shape_25"
  input: "gradients/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_24"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_25"
  op: "Switch"
  input: "DAGM/batch_normalization_6/gamma/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_26"
  op: "Shape"
  input: "gradients/Switch_25:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_25/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_25"
  op: "Fill"
  input: "gradients/Shape_26"
  input: "gradients/zeros_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_25"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_26"
  op: "Switch"
  input: "DAGM/batch_normalization_6/beta/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_27"
  op: "Shape"
  input: "gradients/Switch_26:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_26/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_26"
  op: "Fill"
  input: "gradients/Shape_27"
  input: "gradients/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_26"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_27"
  op: "Switch"
  input: "DAGM/conv2d_7/Conv2D"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_28"
  op: "Shape"
  input: "gradients/Switch_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_27/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_27"
  op: "Fill"
  input: "gradients/Shape_28"
  input: "gradients/zeros_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_27"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_28"
  op: "Switch"
  input: "DAGM/batch_normalization_6/gamma/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_29"
  op: "Shape"
  input: "gradients/Switch_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_28/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_28"
  op: "Fill"
  input: "gradients/Shape_29"
  input: "gradients/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_28"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_29"
  op: "Switch"
  input: "DAGM/batch_normalization_6/beta/read"
  input: "DAGM/batch_normalization_7/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_30"
  op: "Shape"
  input: "gradients/Switch_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_29/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_29"
  op: "Fill"
  input: "gradients/Shape_30"
  input: "gradients/zeros_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_29"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu_5"
  input: "DAGM/conv2d_6/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_7/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_6/kernel/read"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu_5"
  input: "gradients/DAGM/conv2d_7/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_7/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_7/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_5_grad/ReluGrad"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_5_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_6/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_5_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_5_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_6/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_6/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_30"
  op: "Switch"
  input: "DAGM/conv2d_6/Conv2D"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_31"
  op: "Shape"
  input: "gradients/Switch_30:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_30/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_30"
  op: "Fill"
  input: "gradients/Shape_31"
  input: "gradients/zeros_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_30"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_31"
  op: "Switch"
  input: "DAGM/batch_normalization_5/gamma/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_32"
  op: "Shape"
  input: "gradients/Switch_31:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_31/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_31"
  op: "Fill"
  input: "gradients/Shape_32"
  input: "gradients/zeros_31/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_31"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_32"
  op: "Switch"
  input: "DAGM/batch_normalization_5/beta/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_33"
  op: "Shape"
  input: "gradients/Switch_32:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_32/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_32"
  op: "Fill"
  input: "gradients/Shape_33"
  input: "gradients/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_32"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_33"
  op: "Switch"
  input: "DAGM/conv2d_6/Conv2D"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_34"
  op: "Shape"
  input: "gradients/Switch_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_33/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_33"
  op: "Fill"
  input: "gradients/Shape_34"
  input: "gradients/zeros_33/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_33"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_34"
  op: "Switch"
  input: "DAGM/batch_normalization_5/gamma/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_35"
  op: "Shape"
  input: "gradients/Switch_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_34/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_34"
  op: "Fill"
  input: "gradients/Shape_35"
  input: "gradients/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_34"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_35"
  op: "Switch"
  input: "DAGM/batch_normalization_5/beta/read"
  input: "DAGM/batch_normalization_6/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_36"
  op: "Shape"
  input: "gradients/Switch_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_35/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_35"
  op: "Fill"
  input: "gradients/Shape_36"
  input: "gradients/zeros_35/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_35"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu_4"
  input: "DAGM/conv2d_5/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_6/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_5/kernel/read"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu_4"
  input: "gradients/DAGM/conv2d_6/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_6/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_6/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_4_grad/ReluGrad"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_4_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_5/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_4_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_4_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_5/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_5/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_36"
  op: "Switch"
  input: "DAGM/conv2d_5/Conv2D"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_37"
  op: "Shape"
  input: "gradients/Switch_36:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_36/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_36"
  op: "Fill"
  input: "gradients/Shape_37"
  input: "gradients/zeros_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_36"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_37"
  op: "Switch"
  input: "DAGM/batch_normalization_4/gamma/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_38"
  op: "Shape"
  input: "gradients/Switch_37:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_37/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_37"
  op: "Fill"
  input: "gradients/Shape_38"
  input: "gradients/zeros_37/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_37"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_38"
  op: "Switch"
  input: "DAGM/batch_normalization_4/beta/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_39"
  op: "Shape"
  input: "gradients/Switch_38:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_38/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_38"
  op: "Fill"
  input: "gradients/Shape_39"
  input: "gradients/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_38"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_39"
  op: "Switch"
  input: "DAGM/conv2d_5/Conv2D"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_40"
  op: "Shape"
  input: "gradients/Switch_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_39/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_39"
  op: "Fill"
  input: "gradients/Shape_40"
  input: "gradients/zeros_39/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_39"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_40"
  op: "Switch"
  input: "DAGM/batch_normalization_4/gamma/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_41"
  op: "Shape"
  input: "gradients/Switch_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_40/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_40"
  op: "Fill"
  input: "gradients/Shape_41"
  input: "gradients/zeros_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_40"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_41"
  op: "Switch"
  input: "DAGM/batch_normalization_4/beta/read"
  input: "DAGM/batch_normalization_5/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_42"
  op: "Shape"
  input: "gradients/Switch_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_41/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_41"
  op: "Fill"
  input: "gradients/Shape_42"
  input: "gradients/zeros_41/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_41"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/max_pooling2d_2/MaxPool"
  input: "DAGM/conv2d_4/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_5/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_4/kernel/read"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/max_pooling2d_2/MaxPool"
  input: "gradients/DAGM/conv2d_5/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_5/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "DAGM/Relu_3"
  input: "DAGM/max_pooling2d_2/MaxPool"
  input: "gradients/DAGM/conv2d_5/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  input: "DAGM/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_3_grad/ReluGrad"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_3_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_4/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_3_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_3_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_4/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_4/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_42"
  op: "Switch"
  input: "DAGM/conv2d_4/Conv2D"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_43"
  op: "Shape"
  input: "gradients/Switch_42:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_42/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_42"
  op: "Fill"
  input: "gradients/Shape_43"
  input: "gradients/zeros_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_42"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_43"
  op: "Switch"
  input: "DAGM/batch_normalization_3/gamma/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_44"
  op: "Shape"
  input: "gradients/Switch_43:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_43/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_43"
  op: "Fill"
  input: "gradients/Shape_44"
  input: "gradients/zeros_43/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_43"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_44"
  op: "Switch"
  input: "DAGM/batch_normalization_3/beta/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_45"
  op: "Shape"
  input: "gradients/Switch_44:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_44/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_44"
  op: "Fill"
  input: "gradients/Shape_45"
  input: "gradients/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_44"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_45"
  op: "Switch"
  input: "DAGM/conv2d_4/Conv2D"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_46"
  op: "Shape"
  input: "gradients/Switch_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_45/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_45"
  op: "Fill"
  input: "gradients/Shape_46"
  input: "gradients/zeros_45/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_45"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_46"
  op: "Switch"
  input: "DAGM/batch_normalization_3/gamma/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_47"
  op: "Shape"
  input: "gradients/Switch_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_46/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_46"
  op: "Fill"
  input: "gradients/Shape_47"
  input: "gradients/zeros_46/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_46"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_47"
  op: "Switch"
  input: "DAGM/batch_normalization_3/beta/read"
  input: "DAGM/batch_normalization_4/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_48"
  op: "Shape"
  input: "gradients/Switch_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_47/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_47"
  op: "Fill"
  input: "gradients/Shape_48"
  input: "gradients/zeros_47/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_47"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu_2"
  input: "DAGM/conv2d_3/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_4/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_3/kernel/read"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu_2"
  input: "gradients/DAGM/conv2d_4/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_4/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_4/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_2_grad/ReluGrad"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_3/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_2_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_3/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_3/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_48"
  op: "Switch"
  input: "DAGM/conv2d_3/Conv2D"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_49"
  op: "Shape"
  input: "gradients/Switch_48:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_48/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_48"
  op: "Fill"
  input: "gradients/Shape_49"
  input: "gradients/zeros_48/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_48"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_49"
  op: "Switch"
  input: "DAGM/batch_normalization_2/gamma/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_50"
  op: "Shape"
  input: "gradients/Switch_49:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_49/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_49"
  op: "Fill"
  input: "gradients/Shape_50"
  input: "gradients/zeros_49/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_49"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_50"
  op: "Switch"
  input: "DAGM/batch_normalization_2/beta/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_51"
  op: "Shape"
  input: "gradients/Switch_50:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_50/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_50"
  op: "Fill"
  input: "gradients/Shape_51"
  input: "gradients/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_50"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_51"
  op: "Switch"
  input: "DAGM/conv2d_3/Conv2D"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_52"
  op: "Shape"
  input: "gradients/Switch_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_51/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_51"
  op: "Fill"
  input: "gradients/Shape_52"
  input: "gradients/zeros_51/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_51"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_52"
  op: "Switch"
  input: "DAGM/batch_normalization_2/gamma/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_53"
  op: "Shape"
  input: "gradients/Switch_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_52/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_52"
  op: "Fill"
  input: "gradients/Shape_53"
  input: "gradients/zeros_52/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_52"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_53"
  op: "Switch"
  input: "DAGM/batch_normalization_2/beta/read"
  input: "DAGM/batch_normalization_3/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_54"
  op: "Shape"
  input: "gradients/Switch_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_53/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_53"
  op: "Fill"
  input: "gradients/Shape_54"
  input: "gradients/zeros_53/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_53"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/max_pooling2d/MaxPool"
  input: "DAGM/conv2d_2/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_3/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_2/kernel/read"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/max_pooling2d/MaxPool"
  input: "gradients/DAGM/conv2d_3/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_3/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "DAGM/Relu_1"
  input: "DAGM/max_pooling2d/MaxPool"
  input: "gradients/DAGM/conv2d_3/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  input: "DAGM/Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_1_grad/ReluGrad"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_2/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_1_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization_2/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization_2/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_54"
  op: "Switch"
  input: "DAGM/conv2d_2/Conv2D"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_55"
  op: "Shape"
  input: "gradients/Switch_54:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_54/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_54"
  op: "Fill"
  input: "gradients/Shape_55"
  input: "gradients/zeros_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_54"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_55"
  op: "Switch"
  input: "DAGM/batch_normalization_1/gamma/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_56"
  op: "Shape"
  input: "gradients/Switch_55:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_55/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_55"
  op: "Fill"
  input: "gradients/Shape_56"
  input: "gradients/zeros_55/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_55"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_56"
  op: "Switch"
  input: "DAGM/batch_normalization_1/beta/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_57"
  op: "Shape"
  input: "gradients/Switch_56:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_56/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_56"
  op: "Fill"
  input: "gradients/Shape_57"
  input: "gradients/zeros_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_56"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_57"
  op: "Switch"
  input: "DAGM/conv2d_2/Conv2D"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_58"
  op: "Shape"
  input: "gradients/Switch_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_57/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_57"
  op: "Fill"
  input: "gradients/Shape_58"
  input: "gradients/zeros_57/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_57"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_58"
  op: "Switch"
  input: "DAGM/batch_normalization_1/gamma/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_59"
  op: "Shape"
  input: "gradients/Switch_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_58/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_58"
  op: "Fill"
  input: "gradients/Shape_59"
  input: "gradients/zeros_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_58"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_59"
  op: "Switch"
  input: "DAGM/batch_normalization_1/beta/read"
  input: "DAGM/batch_normalization_2/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_60"
  op: "Shape"
  input: "gradients/Switch_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_59/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_59"
  op: "Fill"
  input: "gradients/Shape_60"
  input: "gradients/zeros_59/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_59"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/Relu"
  input: "DAGM/conv2d_1/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d_2/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d_1/kernel/read"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/Relu"
  input: "gradients/DAGM/conv2d_2/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization_2/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/DAGM/conv2d_2/Conv2D_grad/tuple/control_dependency"
  input: "DAGM/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "gradients/DAGM/Relu_grad/ReluGrad"
  input: "DAGM/batch_normalization/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization/cond/Merge_grad/cond_grad"
}
node {
  name: "gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/Merge_grad/cond_grad"
  input: "^gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/Merge_grad/cond_grad:1"
  input: "^gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/control_dependency"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_3"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:1"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:2"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:3"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:4"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/DAGM/batch_normalization/cond/Merge_grad/tuple/control_dependency_1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch:1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm/Switch_1:1"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:3"
  input: "DAGM/batch_normalization/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/Switch_60"
  op: "Switch"
  input: "DAGM/conv2d/Conv2D"
  input: "DAGM/batch_normalization/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_61"
  op: "Shape"
  input: "gradients/Switch_60:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_60/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_60"
  op: "Fill"
  input: "gradients/Shape_61"
  input: "gradients/zeros_60/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency"
  input: "gradients/zeros_60"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_61"
  op: "Switch"
  input: "DAGM/batch_normalization/gamma/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_62"
  op: "Shape"
  input: "gradients/Switch_61:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_61/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_61"
  op: "Fill"
  input: "gradients/Shape_62"
  input: "gradients/zeros_61/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_1"
  input: "gradients/zeros_61"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_62"
  op: "Switch"
  input: "DAGM/batch_normalization/beta/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_63"
  op: "Shape"
  input: "gradients/Switch_62:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_62/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_62"
  op: "Fill"
  input: "gradients/Shape_63"
  input: "gradients/zeros_62/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1_grad/tuple/control_dependency_2"
  input: "gradients/zeros_62"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_63"
  op: "Switch"
  input: "DAGM/conv2d/Conv2D"
  input: "DAGM/batch_normalization/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_64"
  op: "Shape"
  input: "gradients/Switch_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_63/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_63"
  op: "Fill"
  input: "gradients/Shape_64"
  input: "gradients/zeros_63/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/zeros_63"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_64"
  op: "Switch"
  input: "DAGM/batch_normalization/gamma/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_65"
  op: "Shape"
  input: "gradients/Switch_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_64/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_64"
  op: "Fill"
  input: "gradients/Shape_65"
  input: "gradients/zeros_64/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "gradients/zeros_64"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Switch_65"
  op: "Switch"
  input: "DAGM/batch_normalization/beta/read"
  input: "DAGM/batch_normalization/cond/pred_id"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape_66"
  op: "Shape"
  input: "gradients/Switch_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_65/Const"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_65"
  op: "Fill"
  input: "gradients/Shape_66"
  input: "gradients/zeros_65/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "gradients/zeros_65"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DAGM/input"
  input: "DAGM/conv2d/kernel/read"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/DAGM/conv2d/Conv2D_grad/ShapeN"
  input: "DAGM/conv2d/kernel/read"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DAGM/input"
  input: "gradients/DAGM/conv2d/Conv2D_grad/ShapeN:1"
  input: "gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/DAGM/conv2d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/DAGM/conv2d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/DAGM/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/DAGM/conv2d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/DAGM/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_1_grad/cond_grad"
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
  input: "gradients/DAGM/batch_normalization/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/DAGM/batch_normalization/cond/FusedBatchNorm_1/Switch_2_grad/cond_grad"
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d/kernel/Adam"
  input: "DAGM/conv2d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d/kernel/Adam_1"
  input: "DAGM/conv2d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/gamma/Adam"
  input: "DAGM/batch_normalization/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/gamma/Adam_1"
  input: "DAGM/batch_normalization/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/beta/Adam"
  input: "DAGM/batch_normalization/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/beta/Adam_1"
  input: "DAGM/batch_normalization/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_1/kernel/Adam"
  input: "DAGM/conv2d_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_1/kernel/Adam_1"
  input: "DAGM/conv2d_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/gamma/Adam"
  input: "DAGM/batch_normalization_1/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/gamma/Adam_1"
  input: "DAGM/batch_normalization_1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/beta/Adam"
  input: "DAGM/batch_normalization_1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_1/beta/Adam_1"
  input: "DAGM/batch_normalization_1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_1/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_2/kernel/Adam"
  input: "DAGM/conv2d_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_2/kernel/Adam_1"
  input: "DAGM/conv2d_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/gamma/Adam"
  input: "DAGM/batch_normalization_2/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/gamma/Adam_1"
  input: "DAGM/batch_normalization_2/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/beta/Adam"
  input: "DAGM/batch_normalization_2/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_2/beta/Adam_1"
  input: "DAGM/batch_normalization_2/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_2/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_2/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_3/kernel/Adam"
  input: "DAGM/conv2d_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_3/kernel/Adam_1"
  input: "DAGM/conv2d_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_3/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/gamma/Adam"
  input: "DAGM/batch_normalization_3/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/gamma/Adam_1"
  input: "DAGM/batch_normalization_3/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/beta/Adam"
  input: "DAGM/batch_normalization_3/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_3/beta/Adam_1"
  input: "DAGM/batch_normalization_3/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_3/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_3/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_4/kernel/Adam"
  input: "DAGM/conv2d_4/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_4/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_4/kernel/Adam_1"
  input: "DAGM/conv2d_4/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_4/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_4/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/gamma/Adam"
  input: "DAGM/batch_normalization_4/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/gamma/Adam_1"
  input: "DAGM/batch_normalization_4/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/beta/Adam"
  input: "DAGM/batch_normalization_4/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_4/beta/Adam_1"
  input: "DAGM/batch_normalization_4/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_4/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_4/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_5/kernel/Adam"
  input: "DAGM/conv2d_5/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_5/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_5/kernel/Adam_1"
  input: "DAGM/conv2d_5/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_5/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_5/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/gamma/Adam"
  input: "DAGM/batch_normalization_5/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/gamma/Adam_1"
  input: "DAGM/batch_normalization_5/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/beta/Adam"
  input: "DAGM/batch_normalization_5/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_5/beta/Adam_1"
  input: "DAGM/batch_normalization_5/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_5/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_5/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_6/kernel/Adam"
  input: "DAGM/conv2d_6/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_6/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_6/kernel/Adam_1"
  input: "DAGM/conv2d_6/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_6/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_6/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/gamma/Adam"
  input: "DAGM/batch_normalization_6/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/gamma/Adam_1"
  input: "DAGM/batch_normalization_6/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/beta/Adam"
  input: "DAGM/batch_normalization_6/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_6/beta/Adam_1"
  input: "DAGM/batch_normalization_6/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_6/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_6/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_7/kernel/Adam"
  input: "DAGM/conv2d_7/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_7/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_7/kernel/Adam_1"
  input: "DAGM/conv2d_7/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_7/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_7/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/gamma/Adam"
  input: "DAGM/batch_normalization_7/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/gamma/Adam_1"
  input: "DAGM/batch_normalization_7/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/beta/Adam"
  input: "DAGM/batch_normalization_7/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_7/beta/Adam_1"
  input: "DAGM/batch_normalization_7/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_7/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_7/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_8/kernel/Adam"
  input: "DAGM/conv2d_8/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_8/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_8/kernel/Adam_1"
  input: "DAGM/conv2d_8/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_8/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_8/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/gamma/Adam"
  input: "DAGM/batch_normalization_8/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/gamma/Adam_1"
  input: "DAGM/batch_normalization_8/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/beta/Adam"
  input: "DAGM/batch_normalization_8/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_8/beta/Adam_1"
  input: "DAGM/batch_normalization_8/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_8/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_8/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_9/kernel/Adam"
  input: "DAGM/conv2d_9/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_9/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_9/kernel/Adam_1"
  input: "DAGM/conv2d_9/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_9/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_9/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/gamma/Adam"
  input: "DAGM/batch_normalization_9/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/gamma/Adam_1"
  input: "DAGM/batch_normalization_9/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/beta/Adam"
  input: "DAGM/batch_normalization_9/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_9/beta/Adam_1"
  input: "DAGM/batch_normalization_9/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_9/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_9/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/conv2d_10/kernel/Adam"
  input: "DAGM/conv2d_10/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/conv2d_10/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/conv2d_10/kernel/Adam_1"
  input: "DAGM/conv2d_10/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/conv2d_10/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/conv2d_10/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/gamma/Adam"
  input: "DAGM/batch_normalization_10/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/gamma/Adam_1"
  input: "DAGM/batch_normalization_10/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/beta/Adam"
  input: "DAGM/batch_normalization_10/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_10/beta/Adam_1"
  input: "DAGM/batch_normalization_10/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_10/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_10/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/dense/kernel/Adam"
  input: "DAGM/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2048
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/dense/kernel/Adam_1"
  input: "DAGM/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/gamma/Adam"
  input: "DAGM/batch_normalization_11/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/gamma/Adam_1"
  input: "DAGM/batch_normalization_11/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/gamma/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/beta/Adam"
  input: "DAGM/batch_normalization_11/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization_11/beta/Adam_1"
  input: "DAGM/batch_normalization_11/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/batch_normalization_11/beta/Adam_1/read"
  op: "Identity"
  input: "DAGM/batch_normalization_11/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "DAGM/dense_1/kernel/Adam"
  input: "DAGM/dense_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "DAGM/dense_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/dense_1/kernel/Adam_1"
  input: "DAGM/dense_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "DAGM/dense_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "DAGM/dense_1/bias/Adam"
  input: "DAGM/dense_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam/read"
  op: "Identity"
  input: "DAGM/dense_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "DAGM/dense_1/bias/Adam_1"
  input: "DAGM/dense_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DAGM/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "DAGM/dense_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d/kernel"
  input: "DAGM/conv2d/kernel/Adam"
  input: "DAGM/conv2d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization/gamma"
  input: "DAGM/batch_normalization/gamma/Adam"
  input: "DAGM/batch_normalization/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization/beta"
  input: "DAGM/batch_normalization/beta/Adam"
  input: "DAGM/batch_normalization/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_1/kernel"
  input: "DAGM/conv2d_1/kernel/Adam"
  input: "DAGM/conv2d_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_1/gamma"
  input: "DAGM/batch_normalization_1/gamma/Adam"
  input: "DAGM/batch_normalization_1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_1/beta"
  input: "DAGM/batch_normalization_1/beta/Adam"
  input: "DAGM/batch_normalization_1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_2/kernel"
  input: "DAGM/conv2d_2/kernel/Adam"
  input: "DAGM/conv2d_2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_2/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_2/gamma"
  input: "DAGM/batch_normalization_2/gamma/Adam"
  input: "DAGM/batch_normalization_2/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_2/beta"
  input: "DAGM/batch_normalization_2/beta/Adam"
  input: "DAGM/batch_normalization_2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_3/kernel"
  input: "DAGM/conv2d_3/kernel/Adam"
  input: "DAGM/conv2d_3/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_3/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_3/gamma"
  input: "DAGM/batch_normalization_3/gamma/Adam"
  input: "DAGM/batch_normalization_3/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_3/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_3/beta"
  input: "DAGM/batch_normalization_3/beta/Adam"
  input: "DAGM/batch_normalization_3/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_4/kernel"
  input: "DAGM/conv2d_4/kernel/Adam"
  input: "DAGM/conv2d_4/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_4/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_4/gamma"
  input: "DAGM/batch_normalization_4/gamma/Adam"
  input: "DAGM/batch_normalization_4/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_4/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_4/beta"
  input: "DAGM/batch_normalization_4/beta/Adam"
  input: "DAGM/batch_normalization_4/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_5/kernel"
  input: "DAGM/conv2d_5/kernel/Adam"
  input: "DAGM/conv2d_5/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_5/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_5/gamma"
  input: "DAGM/batch_normalization_5/gamma/Adam"
  input: "DAGM/batch_normalization_5/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_5/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_5/beta"
  input: "DAGM/batch_normalization_5/beta/Adam"
  input: "DAGM/batch_normalization_5/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_6/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_6/kernel"
  input: "DAGM/conv2d_6/kernel/Adam"
  input: "DAGM/conv2d_6/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_6/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_6/gamma"
  input: "DAGM/batch_normalization_6/gamma/Adam"
  input: "DAGM/batch_normalization_6/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_6/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_6/beta"
  input: "DAGM/batch_normalization_6/beta/Adam"
  input: "DAGM/batch_normalization_6/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_7/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_7/kernel"
  input: "DAGM/conv2d_7/kernel/Adam"
  input: "DAGM/conv2d_7/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_8/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_7/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_7/gamma"
  input: "DAGM/batch_normalization_7/gamma/Adam"
  input: "DAGM/batch_normalization_7/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_7/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_7/beta"
  input: "DAGM/batch_normalization_7/beta/Adam"
  input: "DAGM/batch_normalization_7/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_8/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_8/kernel"
  input: "DAGM/conv2d_8/kernel/Adam"
  input: "DAGM/conv2d_8/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_9/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_8/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_8/gamma"
  input: "DAGM/batch_normalization_8/gamma/Adam"
  input: "DAGM/batch_normalization_8/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_8/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_8/beta"
  input: "DAGM/batch_normalization_8/beta/Adam"
  input: "DAGM/batch_normalization_8/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_9/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_9/kernel"
  input: "DAGM/conv2d_9/kernel/Adam"
  input: "DAGM/conv2d_9/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_10/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_9/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_9/gamma"
  input: "DAGM/batch_normalization_9/gamma/Adam"
  input: "DAGM/batch_normalization_9/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_9/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_9/beta"
  input: "DAGM/batch_normalization_9/beta/Adam"
  input: "DAGM/batch_normalization_9/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/conv2d_10/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/conv2d_10/kernel"
  input: "DAGM/conv2d_10/kernel/Adam"
  input: "DAGM/conv2d_10/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/conv2d_11/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_10/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_10/gamma"
  input: "DAGM/batch_normalization_10/gamma/Adam"
  input: "DAGM/batch_normalization_10/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_10/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_10/beta"
  input: "DAGM/batch_normalization_10/beta/Adam"
  input: "DAGM/batch_normalization_10/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/dense/kernel"
  input: "DAGM/dense/kernel/Adam"
  input: "DAGM/dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_11/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_11/gamma"
  input: "DAGM/batch_normalization_11/gamma/Adam"
  input: "DAGM/batch_normalization_11/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/batch_normalization_11/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/batch_normalization_11/beta"
  input: "DAGM/batch_normalization_11/beta/Adam"
  input: "DAGM/batch_normalization_11/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/batch_normalization_12/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/dense_1/kernel"
  input: "DAGM/dense_1/kernel/Adam"
  input: "DAGM/dense_1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/dense_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_DAGM/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "DAGM/dense_1/bias"
  input: "DAGM/dense_1/bias/Adam"
  input: "DAGM/dense_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/DAGM/dense_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_DAGM/conv2d/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_1/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_1/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_1/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_2/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_2/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_2/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_3/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_3/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_3/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_4/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_4/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_4/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_5/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_5/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_5/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_6/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_6/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_6/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_7/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_7/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_7/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_8/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_8/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_8/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_9/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_9/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_9/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_10/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_10/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_10/beta/ApplyAdam"
  input: "^Adam/update_DAGM/dense/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_11/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_11/beta/ApplyAdam"
  input: "^Adam/update_DAGM/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/dense_1/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_DAGM/conv2d/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_1/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_1/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_1/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_2/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_2/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_2/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_3/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_3/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_3/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_4/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_4/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_4/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_5/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_5/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_5/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_6/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_6/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_6/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_7/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_7/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_7/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_8/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_8/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_8/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_9/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_9/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_9/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_10/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_10/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_10/beta/ApplyAdam"
  input: "^Adam/update_DAGM/dense/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_11/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_11/beta/ApplyAdam"
  input: "^Adam/update_DAGM/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/dense_1/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^DAGM/batch_normalization/AssignMovingAvg"
  input: "^DAGM/batch_normalization/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg"
  input: "^DAGM/batch_normalization_2/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg"
  input: "^DAGM/batch_normalization_3/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg"
  input: "^DAGM/batch_normalization_4/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg"
  input: "^DAGM/batch_normalization_5/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg"
  input: "^DAGM/batch_normalization_6/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg"
  input: "^DAGM/batch_normalization_7/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg"
  input: "^DAGM/batch_normalization_8/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg"
  input: "^DAGM/batch_normalization_9/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg"
  input: "^DAGM/batch_normalization_10/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg"
  input: "^DAGM/batch_normalization_11/AssignMovingAvg_1"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg"
  input: "^DAGM/batch_normalization_12/AssignMovingAvg_1"
  input: "^Adam/update_DAGM/conv2d/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_1/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_1/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_1/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_2/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_2/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_2/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_3/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_3/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_3/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_4/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_4/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_4/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_5/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_5/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_5/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_6/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_6/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_6/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_7/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_7/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_7/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_8/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_8/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_8/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_9/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_9/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_9/beta/ApplyAdam"
  input: "^Adam/update_DAGM/conv2d_10/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_10/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_10/beta/ApplyAdam"
  input: "^Adam/update_DAGM/dense/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_11/gamma/ApplyAdam"
  input: "^Adam/update_DAGM/batch_normalization_11/beta/ApplyAdam"
  input: "^Adam/update_DAGM/dense_1/kernel/ApplyAdam"
  input: "^Adam/update_DAGM/dense_1/bias/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "DAGM/dense_2/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "DAGM/Placeholder"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "Cast_1"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 140
          }
        }
        string_val: "DAGM/batch_normalization/beta"
        string_val: "DAGM/batch_normalization/beta/Adam"
        string_val: "DAGM/batch_normalization/beta/Adam_1"
        string_val: "DAGM/batch_normalization/gamma"
        string_val: "DAGM/batch_normalization/gamma/Adam"
        string_val: "DAGM/batch_normalization/gamma/Adam_1"
        string_val: "DAGM/batch_normalization/moving_mean"
        string_val: "DAGM/batch_normalization/moving_variance"
        string_val: "DAGM/batch_normalization_1/beta"
        string_val: "DAGM/batch_normalization_1/beta/Adam"
        string_val: "DAGM/batch_normalization_1/beta/Adam_1"
        string_val: "DAGM/batch_normalization_1/gamma"
        string_val: "DAGM/batch_normalization_1/gamma/Adam"
        string_val: "DAGM/batch_normalization_1/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_1/moving_mean"
        string_val: "DAGM/batch_normalization_1/moving_variance"
        string_val: "DAGM/batch_normalization_10/beta"
        string_val: "DAGM/batch_normalization_10/beta/Adam"
        string_val: "DAGM/batch_normalization_10/beta/Adam_1"
        string_val: "DAGM/batch_normalization_10/gamma"
        string_val: "DAGM/batch_normalization_10/gamma/Adam"
        string_val: "DAGM/batch_normalization_10/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_10/moving_mean"
        string_val: "DAGM/batch_normalization_10/moving_variance"
        string_val: "DAGM/batch_normalization_11/beta"
        string_val: "DAGM/batch_normalization_11/beta/Adam"
        string_val: "DAGM/batch_normalization_11/beta/Adam_1"
        string_val: "DAGM/batch_normalization_11/gamma"
        string_val: "DAGM/batch_normalization_11/gamma/Adam"
        string_val: "DAGM/batch_normalization_11/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_11/moving_mean"
        string_val: "DAGM/batch_normalization_11/moving_variance"
        string_val: "DAGM/batch_normalization_2/beta"
        string_val: "DAGM/batch_normalization_2/beta/Adam"
        string_val: "DAGM/batch_normalization_2/beta/Adam_1"
        string_val: "DAGM/batch_normalization_2/gamma"
        string_val: "DAGM/batch_normalization_2/gamma/Adam"
        string_val: "DAGM/batch_normalization_2/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_2/moving_mean"
        string_val: "DAGM/batch_normalization_2/moving_variance"
        string_val: "DAGM/batch_normalization_3/beta"
        string_val: "DAGM/batch_normalization_3/beta/Adam"
        string_val: "DAGM/batch_normalization_3/beta/Adam_1"
        string_val: "DAGM/batch_normalization_3/gamma"
        string_val: "DAGM/batch_normalization_3/gamma/Adam"
        string_val: "DAGM/batch_normalization_3/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_3/moving_mean"
        string_val: "DAGM/batch_normalization_3/moving_variance"
        string_val: "DAGM/batch_normalization_4/beta"
        string_val: "DAGM/batch_normalization_4/beta/Adam"
        string_val: "DAGM/batch_normalization_4/beta/Adam_1"
        string_val: "DAGM/batch_normalization_4/gamma"
        string_val: "DAGM/batch_normalization_4/gamma/Adam"
        string_val: "DAGM/batch_normalization_4/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_4/moving_mean"
        string_val: "DAGM/batch_normalization_4/moving_variance"
        string_val: "DAGM/batch_normalization_5/beta"
        string_val: "DAGM/batch_normalization_5/beta/Adam"
        string_val: "DAGM/batch_normalization_5/beta/Adam_1"
        string_val: "DAGM/batch_normalization_5/gamma"
        string_val: "DAGM/batch_normalization_5/gamma/Adam"
        string_val: "DAGM/batch_normalization_5/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_5/moving_mean"
        string_val: "DAGM/batch_normalization_5/moving_variance"
        string_val: "DAGM/batch_normalization_6/beta"
        string_val: "DAGM/batch_normalization_6/beta/Adam"
        string_val: "DAGM/batch_normalization_6/beta/Adam_1"
        string_val: "DAGM/batch_normalization_6/gamma"
        string_val: "DAGM/batch_normalization_6/gamma/Adam"
        string_val: "DAGM/batch_normalization_6/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_6/moving_mean"
        string_val: "DAGM/batch_normalization_6/moving_variance"
        string_val: "DAGM/batch_normalization_7/beta"
        string_val: "DAGM/batch_normalization_7/beta/Adam"
        string_val: "DAGM/batch_normalization_7/beta/Adam_1"
        string_val: "DAGM/batch_normalization_7/gamma"
        string_val: "DAGM/batch_normalization_7/gamma/Adam"
        string_val: "DAGM/batch_normalization_7/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_7/moving_mean"
        string_val: "DAGM/batch_normalization_7/moving_variance"
        string_val: "DAGM/batch_normalization_8/beta"
        string_val: "DAGM/batch_normalization_8/beta/Adam"
        string_val: "DAGM/batch_normalization_8/beta/Adam_1"
        string_val: "DAGM/batch_normalization_8/gamma"
        string_val: "DAGM/batch_normalization_8/gamma/Adam"
        string_val: "DAGM/batch_normalization_8/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_8/moving_mean"
        string_val: "DAGM/batch_normalization_8/moving_variance"
        string_val: "DAGM/batch_normalization_9/beta"
        string_val: "DAGM/batch_normalization_9/beta/Adam"
        string_val: "DAGM/batch_normalization_9/beta/Adam_1"
        string_val: "DAGM/batch_normalization_9/gamma"
        string_val: "DAGM/batch_normalization_9/gamma/Adam"
        string_val: "DAGM/batch_normalization_9/gamma/Adam_1"
        string_val: "DAGM/batch_normalization_9/moving_mean"
        string_val: "DAGM/batch_normalization_9/moving_variance"
        string_val: "DAGM/conv2d/kernel"
        string_val: "DAGM/conv2d/kernel/Adam"
        string_val: "DAGM/conv2d/kernel/Adam_1"
        string_val: "DAGM/conv2d_1/kernel"
        string_val: "DAGM/conv2d_1/kernel/Adam"
        string_val: "DAGM/conv2d_1/kernel/Adam_1"
        string_val: "DAGM/conv2d_10/kernel"
        string_val: "DAGM/conv2d_10/kernel/Adam"
        string_val: "DAGM/conv2d_10/kernel/Adam_1"
        string_val: "DAGM/conv2d_2/kernel"
        string_val: "DAGM/conv2d_2/kernel/Adam"
        string_val: "DAGM/conv2d_2/kernel/Adam_1"
        string_val: "DAGM/conv2d_3/kernel"
        string_val: "DAGM/conv2d_3/kernel/Adam"
        string_val: "DAGM/conv2d_3/kernel/Adam_1"
        string_val: "DAGM/conv2d_4/kernel"
        string_val: "DAGM/conv2d_4/kernel/Adam"
        string_val: "DAGM/conv2d_4/kernel/Adam_1"
        string_val: "DAGM/conv2d_5/kernel"
        string_val: "DAGM/conv2d_5/kernel/Adam"
        string_val: "DAGM/conv2d_5/kernel/Adam_1"
        string_val: "DAGM/conv2d_6/kernel"
        string_val: "DAGM/conv2d_6/kernel/Adam"
        string_val: "DAGM/conv2d_6/kernel/Adam_1"
        string_val: "DAGM/conv2d_7/kernel"
        string_val: "DAGM/conv2d_7/kernel/Adam"
        string_val: "DAGM/conv2d_7/kernel/Adam_1"
        string_val: "DAGM/conv2d_8/kernel"
        string_val: "DAGM/conv2d_8/kernel/Adam"
        string_val: "DAGM/conv2d_8/kernel/Adam_1"
        string_val: "DAGM/conv2d_9/kernel"
        string_val: "DAGM/conv2d_9/kernel/Adam"
        string_val: "DAGM/conv2d_9/kernel/Adam_1"
        string_val: "DAGM/dense/kernel"
        string_val: "DAGM/dense/kernel/Adam"
        string_val: "DAGM/dense/kernel/Adam_1"
        string_val: "DAGM/dense_1/bias"
        string_val: "DAGM/dense_1/bias/Adam"
        string_val: "DAGM/dense_1/bias/Adam_1"
        string_val: "DAGM/dense_1/kernel"
        string_val: "DAGM/dense_1/kernel/Adam"
        string_val: "DAGM/dense_1/kernel/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 140
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "DAGM/batch_normalization/beta"
  input: "DAGM/batch_normalization/beta/Adam"
  input: "DAGM/batch_normalization/beta/Adam_1"
  input: "DAGM/batch_normalization/gamma"
  input: "DAGM/batch_normalization/gamma/Adam"
  input: "DAGM/batch_normalization/gamma/Adam_1"
  input: "DAGM/batch_normalization/moving_mean"
  input: "DAGM/batch_normalization/moving_variance"
  input: "DAGM/batch_normalization_1/beta"
  input: "DAGM/batch_normalization_1/beta/Adam"
  input: "DAGM/batch_normalization_1/beta/Adam_1"
  input: "DAGM/batch_normalization_1/gamma"
  input: "DAGM/batch_normalization_1/gamma/Adam"
  input: "DAGM/batch_normalization_1/gamma/Adam_1"
  input: "DAGM/batch_normalization_1/moving_mean"
  input: "DAGM/batch_normalization_1/moving_variance"
  input: "DAGM/batch_normalization_10/beta"
  input: "DAGM/batch_normalization_10/beta/Adam"
  input: "DAGM/batch_normalization_10/beta/Adam_1"
  input: "DAGM/batch_normalization_10/gamma"
  input: "DAGM/batch_normalization_10/gamma/Adam"
  input: "DAGM/batch_normalization_10/gamma/Adam_1"
  input: "DAGM/batch_normalization_10/moving_mean"
  input: "DAGM/batch_normalization_10/moving_variance"
  input: "DAGM/batch_normalization_11/beta"
  input: "DAGM/batch_normalization_11/beta/Adam"
  input: "DAGM/batch_normalization_11/beta/Adam_1"
  input: "DAGM/batch_normalization_11/gamma"
  input: "DAGM/batch_normalization_11/gamma/Adam"
  input: "DAGM/batch_normalization_11/gamma/Adam_1"
  input: "DAGM/batch_normalization_11/moving_mean"
  input: "DAGM/batch_normalization_11/moving_variance"
  input: "DAGM/batch_normalization_2/beta"
  input: "DAGM/batch_normalization_2/beta/Adam"
  input: "DAGM/batch_normalization_2/beta/Adam_1"
  input: "DAGM/batch_normalization_2/gamma"
  input: "DAGM/batch_normalization_2/gamma/Adam"
  input: "DAGM/batch_normalization_2/gamma/Adam_1"
  input: "DAGM/batch_normalization_2/moving_mean"
  input: "DAGM/batch_normalization_2/moving_variance"
  input: "DAGM/batch_normalization_3/beta"
  input: "DAGM/batch_normalization_3/beta/Adam"
  input: "DAGM/batch_normalization_3/beta/Adam_1"
  input: "DAGM/batch_normalization_3/gamma"
  input: "DAGM/batch_normalization_3/gamma/Adam"
  input: "DAGM/batch_normalization_3/gamma/Adam_1"
  input: "DAGM/batch_normalization_3/moving_mean"
  input: "DAGM/batch_normalization_3/moving_variance"
  input: "DAGM/batch_normalization_4/beta"
  input: "DAGM/batch_normalization_4/beta/Adam"
  input: "DAGM/batch_normalization_4/beta/Adam_1"
  input: "DAGM/batch_normalization_4/gamma"
  input: "DAGM/batch_normalization_4/gamma/Adam"
  input: "DAGM/batch_normalization_4/gamma/Adam_1"
  input: "DAGM/batch_normalization_4/moving_mean"
  input: "DAGM/batch_normalization_4/moving_variance"
  input: "DAGM/batch_normalization_5/beta"
  input: "DAGM/batch_normalization_5/beta/Adam"
  input: "DAGM/batch_normalization_5/beta/Adam_1"
  input: "DAGM/batch_normalization_5/gamma"
  input: "DAGM/batch_normalization_5/gamma/Adam"
  input: "DAGM/batch_normalization_5/gamma/Adam_1"
  input: "DAGM/batch_normalization_5/moving_mean"
  input: "DAGM/batch_normalization_5/moving_variance"
  input: "DAGM/batch_normalization_6/beta"
  input: "DAGM/batch_normalization_6/beta/Adam"
  input: "DAGM/batch_normalization_6/beta/Adam_1"
  input: "DAGM/batch_normalization_6/gamma"
  input: "DAGM/batch_normalization_6/gamma/Adam"
  input: "DAGM/batch_normalization_6/gamma/Adam_1"
  input: "DAGM/batch_normalization_6/moving_mean"
  input: "DAGM/batch_normalization_6/moving_variance"
  input: "DAGM/batch_normalization_7/beta"
  input: "DAGM/batch_normalization_7/beta/Adam"
  input: "DAGM/batch_normalization_7/beta/Adam_1"
  input: "DAGM/batch_normalization_7/gamma"
  input: "DAGM/batch_normalization_7/gamma/Adam"
  input: "DAGM/batch_normalization_7/gamma/Adam_1"
  input: "DAGM/batch_normalization_7/moving_mean"
  input: "DAGM/batch_normalization_7/moving_variance"
  input: "DAGM/batch_normalization_8/beta"
  input: "DAGM/batch_normalization_8/beta/Adam"
  input: "DAGM/batch_normalization_8/beta/Adam_1"
  input: "DAGM/batch_normalization_8/gamma"
  input: "DAGM/batch_normalization_8/gamma/Adam"
  input: "DAGM/batch_normalization_8/gamma/Adam_1"
  input: "DAGM/batch_normalization_8/moving_mean"
  input: "DAGM/batch_normalization_8/moving_variance"
  input: "DAGM/batch_normalization_9/beta"
  input: "DAGM/batch_normalization_9/beta/Adam"
  input: "DAGM/batch_normalization_9/beta/Adam_1"
  input: "DAGM/batch_normalization_9/gamma"
  input: "DAGM/batch_normalization_9/gamma/Adam"
  input: "DAGM/batch_normalization_9/gamma/Adam_1"
  input: "DAGM/batch_normalization_9/moving_mean"
  input: "DAGM/batch_normalization_9/moving_variance"
  input: "DAGM/conv2d/kernel"
  input: "DAGM/conv2d/kernel/Adam"
  input: "DAGM/conv2d/kernel/Adam_1"
  input: "DAGM/conv2d_1/kernel"
  input: "DAGM/conv2d_1/kernel/Adam"
  input: "DAGM/conv2d_1/kernel/Adam_1"
  input: "DAGM/conv2d_10/kernel"
  input: "DAGM/conv2d_10/kernel/Adam"
  input: "DAGM/conv2d_10/kernel/Adam_1"
  input: "DAGM/conv2d_2/kernel"
  input: "DAGM/conv2d_2/kernel/Adam"
  input: "DAGM/conv2d_2/kernel/Adam_1"
  input: "DAGM/conv2d_3/kernel"
  input: "DAGM/conv2d_3/kernel/Adam"
  input: "DAGM/conv2d_3/kernel/Adam_1"
  input: "DAGM/conv2d_4/kernel"
  input: "DAGM/conv2d_4/kernel/Adam"
  input: "DAGM/conv2d_4/kernel/Adam_1"
  input: "DAGM/conv2d_5/kernel"
  input: "DAGM/conv2d_5/kernel/Adam"
  input: "DAGM/conv2d_5/kernel/Adam_1"
  input: "DAGM/conv2d_6/kernel"
  input: "DAGM/conv2d_6/kernel/Adam"
  input: "DAGM/conv2d_6/kernel/Adam_1"
  input: "DAGM/conv2d_7/kernel"
  input: "DAGM/conv2d_7/kernel/Adam"
  input: "DAGM/conv2d_7/kernel/Adam_1"
  input: "DAGM/conv2d_8/kernel"
  input: "DAGM/conv2d_8/kernel/Adam"
  input: "DAGM/conv2d_8/kernel/Adam_1"
  input: "DAGM/conv2d_9/kernel"
  input: "DAGM/conv2d_9/kernel/Adam"
  input: "DAGM/conv2d_9/kernel/Adam_1"
  input: "DAGM/dense/kernel"
  input: "DAGM/dense/kernel/Adam"
  input: "DAGM/dense/kernel/Adam_1"
  input: "DAGM/dense_1/bias"
  input: "DAGM/dense_1/bias/Adam"
  input: "DAGM/dense_1/bias/Adam_1"
  input: "DAGM/dense_1/kernel"
  input: "DAGM/dense_1/kernel/Adam"
  input: "DAGM/dense_1/kernel/Adam_1"
  input: "beta1_power"
  input: "beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "DAGM/batch_normalization/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "DAGM/batch_normalization/beta/Adam"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "DAGM/batch_normalization/beta/Adam_1"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "DAGM/batch_normalization/gamma"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "DAGM/batch_normalization/gamma/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "DAGM/batch_normalization/gamma/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "DAGM/batch_normalization/moving_mean"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "DAGM/batch_normalization/moving_variance"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "DAGM/batch_normalization_1/beta"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "DAGM/batch_normalization_1/beta/Adam"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "DAGM/batch_normalization_1/beta/Adam_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "DAGM/batch_normalization_1/gamma"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "DAGM/batch_normalization_1/gamma/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "DAGM/batch_normalization_1/gamma/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "DAGM/batch_normalization_1/moving_mean"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "DAGM/batch_normalization_1/moving_variance"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "DAGM/batch_normalization_10/beta"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "DAGM/batch_normalization_10/beta/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "DAGM/batch_normalization_10/beta/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "DAGM/batch_normalization_10/gamma"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "DAGM/batch_normalization_10/gamma/Adam"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "DAGM/batch_normalization_10/gamma/Adam_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "DAGM/batch_normalization_10/moving_mean"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "DAGM/batch_normalization_10/moving_variance"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "DAGM/batch_normalization_11/beta"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "DAGM/batch_normalization_11/beta/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "DAGM/batch_normalization_11/beta/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "DAGM/batch_normalization_11/gamma"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "DAGM/batch_normalization_11/gamma/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "DAGM/batch_normalization_11/gamma/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "DAGM/batch_normalization_11/moving_mean"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "DAGM/batch_normalization_11/moving_variance"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "DAGM/batch_normalization_2/beta"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "DAGM/batch_normalization_2/beta/Adam"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "DAGM/batch_normalization_2/beta/Adam_1"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "DAGM/batch_normalization_2/gamma"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "DAGM/batch_normalization_2/gamma/Adam"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "DAGM/batch_normalization_2/gamma/Adam_1"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "DAGM/batch_normalization_2/moving_mean"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "DAGM/batch_normalization_2/moving_variance"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "DAGM/batch_normalization_3/beta"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "DAGM/batch_normalization_3/beta/Adam"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "DAGM/batch_normalization_3/beta/Adam_1"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "DAGM/batch_normalization_3/gamma"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "DAGM/batch_normalization_3/gamma/Adam"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "DAGM/batch_normalization_3/gamma/Adam_1"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "DAGM/batch_normalization_3/moving_mean"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "DAGM/batch_normalization_3/moving_variance"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "DAGM/batch_normalization_4/beta"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "DAGM/batch_normalization_4/beta/Adam"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "DAGM/batch_normalization_4/beta/Adam_1"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "DAGM/batch_normalization_4/gamma"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "DAGM/batch_normalization_4/gamma/Adam"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "DAGM/batch_normalization_4/gamma/Adam_1"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "DAGM/batch_normalization_4/moving_mean"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "DAGM/batch_normalization_4/moving_variance"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "DAGM/batch_normalization_5/beta"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "DAGM/batch_normalization_5/beta/Adam"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "DAGM/batch_normalization_5/beta/Adam_1"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "DAGM/batch_normalization_5/gamma"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "DAGM/batch_normalization_5/gamma/Adam"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "DAGM/batch_normalization_5/gamma/Adam_1"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "DAGM/batch_normalization_5/moving_mean"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "DAGM/batch_normalization_5/moving_variance"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "DAGM/batch_normalization_6/beta"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "DAGM/batch_normalization_6/beta/Adam"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "DAGM/batch_normalization_6/beta/Adam_1"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "DAGM/batch_normalization_6/gamma"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "DAGM/batch_normalization_6/gamma/Adam"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "DAGM/batch_normalization_6/gamma/Adam_1"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "DAGM/batch_normalization_6/moving_mean"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "DAGM/batch_normalization_6/moving_variance"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "DAGM/batch_normalization_7/beta"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "DAGM/batch_normalization_7/beta/Adam"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "DAGM/batch_normalization_7/beta/Adam_1"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "DAGM/batch_normalization_7/gamma"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "DAGM/batch_normalization_7/gamma/Adam"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "DAGM/batch_normalization_7/gamma/Adam_1"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "DAGM/batch_normalization_7/moving_mean"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "DAGM/batch_normalization_7/moving_variance"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "DAGM/batch_normalization_8/beta"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "DAGM/batch_normalization_8/beta/Adam"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "DAGM/batch_normalization_8/beta/Adam_1"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "DAGM/batch_normalization_8/gamma"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "DAGM/batch_normalization_8/gamma/Adam"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "DAGM/batch_normalization_8/gamma/Adam_1"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "DAGM/batch_normalization_8/moving_mean"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "DAGM/batch_normalization_8/moving_variance"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "DAGM/batch_normalization_9/beta"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "DAGM/batch_normalization_9/beta/Adam"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "DAGM/batch_normalization_9/beta/Adam_1"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "DAGM/batch_normalization_9/gamma"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "DAGM/batch_normalization_9/gamma/Adam"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "DAGM/batch_normalization_9/gamma/Adam_1"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "DAGM/batch_normalization_9/moving_mean"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "DAGM/batch_normalization_9/moving_variance"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "DAGM/conv2d/kernel"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "DAGM/conv2d/kernel/Adam"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "DAGM/conv2d/kernel/Adam_1"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "DAGM/conv2d_1/kernel"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "DAGM/conv2d_1/kernel/Adam"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "DAGM/conv2d_1/kernel/Adam_1"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "DAGM/conv2d_10/kernel"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_10/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "DAGM/conv2d_10/kernel/Adam"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_10/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "DAGM/conv2d_10/kernel/Adam_1"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "DAGM/conv2d_2/kernel"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "DAGM/conv2d_2/kernel/Adam"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "DAGM/conv2d_2/kernel/Adam_1"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "DAGM/conv2d_3/kernel"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_3/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "DAGM/conv2d_3/kernel/Adam"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_3/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "DAGM/conv2d_3/kernel/Adam_1"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "DAGM/conv2d_4/kernel"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_4/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "DAGM/conv2d_4/kernel/Adam"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_4/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "DAGM/conv2d_4/kernel/Adam_1"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "DAGM/conv2d_5/kernel"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_5/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "DAGM/conv2d_5/kernel/Adam"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_5/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "DAGM/conv2d_5/kernel/Adam_1"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "DAGM/conv2d_6/kernel"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_6/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "DAGM/conv2d_6/kernel/Adam"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_6/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "DAGM/conv2d_6/kernel/Adam_1"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "DAGM/conv2d_7/kernel"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_7/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "DAGM/conv2d_7/kernel/Adam"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_7/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "DAGM/conv2d_7/kernel/Adam_1"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "DAGM/conv2d_8/kernel"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_8/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "DAGM/conv2d_8/kernel/Adam"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_8/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "DAGM/conv2d_8/kernel/Adam_1"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "DAGM/conv2d_9/kernel"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_9/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "DAGM/conv2d_9/kernel/Adam"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/conv2d_9/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "DAGM/conv2d_9/kernel/Adam_1"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "DAGM/dense/kernel"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "DAGM/dense/kernel/Adam"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "DAGM/dense/kernel/Adam_1"
  input: "save/RestoreV2_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "DAGM/dense_1/bias"
  input: "save/RestoreV2_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_133/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_133/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_133"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_133/tensor_names"
  input: "save/RestoreV2_133/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "DAGM/dense_1/bias/Adam"
  input: "save/RestoreV2_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_134/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_134/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_134"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_134/tensor_names"
  input: "save/RestoreV2_134/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "DAGM/dense_1/bias/Adam_1"
  input: "save/RestoreV2_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_135/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_135/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_135"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_135/tensor_names"
  input: "save/RestoreV2_135/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "DAGM/dense_1/kernel"
  input: "save/RestoreV2_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_136/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_136/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_136"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_136/tensor_names"
  input: "save/RestoreV2_136/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "DAGM/dense_1/kernel/Adam"
  input: "save/RestoreV2_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_137/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "DAGM/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_137/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_137"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_137/tensor_names"
  input: "save/RestoreV2_137/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "DAGM/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_138/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_138/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_138"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_138/tensor_names"
  input: "save/RestoreV2_138/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_139/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_139/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_139"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_139/tensor_names"
  input: "save/RestoreV2_139/shape_and_slices"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DAGM/batch_normalization/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
}
node {
  name: "init"
  op: "NoOp"
  input: "^DAGM/conv2d/kernel/Assign"
  input: "^DAGM/batch_normalization/gamma/Assign"
  input: "^DAGM/batch_normalization/beta/Assign"
  input: "^DAGM/batch_normalization/moving_mean/Assign"
  input: "^DAGM/batch_normalization/moving_variance/Assign"
  input: "^DAGM/conv2d_1/kernel/Assign"
  input: "^DAGM/batch_normalization_1/gamma/Assign"
  input: "^DAGM/batch_normalization_1/beta/Assign"
  input: "^DAGM/batch_normalization_1/moving_mean/Assign"
  input: "^DAGM/batch_normalization_1/moving_variance/Assign"
  input: "^DAGM/conv2d_2/kernel/Assign"
  input: "^DAGM/batch_normalization_2/gamma/Assign"
  input: "^DAGM/batch_normalization_2/beta/Assign"
  input: "^DAGM/batch_normalization_2/moving_mean/Assign"
  input: "^DAGM/batch_normalization_2/moving_variance/Assign"
  input: "^DAGM/conv2d_3/kernel/Assign"
  input: "^DAGM/batch_normalization_3/gamma/Assign"
  input: "^DAGM/batch_normalization_3/beta/Assign"
  input: "^DAGM/batch_normalization_3/moving_mean/Assign"
  input: "^DAGM/batch_normalization_3/moving_variance/Assign"
  input: "^DAGM/conv2d_4/kernel/Assign"
  input: "^DAGM/batch_normalization_4/gamma/Assign"
  input: "^DAGM/batch_normalization_4/beta/Assign"
  input: "^DAGM/batch_normalization_4/moving_mean/Assign"
  input: "^DAGM/batch_normalization_4/moving_variance/Assign"
  input: "^DAGM/conv2d_5/kernel/Assign"
  input: "^DAGM/batch_normalization_5/gamma/Assign"
  input: "^DAGM/batch_normalization_5/beta/Assign"
  input: "^DAGM/batch_normalization_5/moving_mean/Assign"
  input: "^DAGM/batch_normalization_5/moving_variance/Assign"
  input: "^DAGM/conv2d_6/kernel/Assign"
  input: "^DAGM/batch_normalization_6/gamma/Assign"
  input: "^DAGM/batch_normalization_6/beta/Assign"
  input: "^DAGM/batch_normalization_6/moving_mean/Assign"
  input: "^DAGM/batch_normalization_6/moving_variance/Assign"
  input: "^DAGM/conv2d_7/kernel/Assign"
  input: "^DAGM/batch_normalization_7/gamma/Assign"
  input: "^DAGM/batch_normalization_7/beta/Assign"
  input: "^DAGM/batch_normalization_7/moving_mean/Assign"
  input: "^DAGM/batch_normalization_7/moving_variance/Assign"
  input: "^DAGM/conv2d_8/kernel/Assign"
  input: "^DAGM/batch_normalization_8/gamma/Assign"
  input: "^DAGM/batch_normalization_8/beta/Assign"
  input: "^DAGM/batch_normalization_8/moving_mean/Assign"
  input: "^DAGM/batch_normalization_8/moving_variance/Assign"
  input: "^DAGM/conv2d_9/kernel/Assign"
  input: "^DAGM/batch_normalization_9/gamma/Assign"
  input: "^DAGM/batch_normalization_9/beta/Assign"
  input: "^DAGM/batch_normalization_9/moving_mean/Assign"
  input: "^DAGM/batch_normalization_9/moving_variance/Assign"
  input: "^DAGM/conv2d_10/kernel/Assign"
  input: "^DAGM/batch_normalization_10/gamma/Assign"
  input: "^DAGM/batch_normalization_10/beta/Assign"
  input: "^DAGM/batch_normalization_10/moving_mean/Assign"
  input: "^DAGM/batch_normalization_10/moving_variance/Assign"
  input: "^DAGM/dense/kernel/Assign"
  input: "^DAGM/batch_normalization_11/gamma/Assign"
  input: "^DAGM/batch_normalization_11/beta/Assign"
  input: "^DAGM/batch_normalization_11/moving_mean/Assign"
  input: "^DAGM/batch_normalization_11/moving_variance/Assign"
  input: "^DAGM/dense_1/kernel/Assign"
  input: "^DAGM/dense_1/bias/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^DAGM/conv2d/kernel/Adam/Assign"
  input: "^DAGM/conv2d/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization/beta/Adam/Assign"
  input: "^DAGM/batch_normalization/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_1/kernel/Adam/Assign"
  input: "^DAGM/conv2d_1/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_1/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_1/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_1/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_1/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_2/kernel/Adam/Assign"
  input: "^DAGM/conv2d_2/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_2/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_2/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_2/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_2/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_3/kernel/Adam/Assign"
  input: "^DAGM/conv2d_3/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_3/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_3/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_3/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_3/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_4/kernel/Adam/Assign"
  input: "^DAGM/conv2d_4/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_4/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_4/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_4/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_4/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_5/kernel/Adam/Assign"
  input: "^DAGM/conv2d_5/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_5/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_5/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_5/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_5/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_6/kernel/Adam/Assign"
  input: "^DAGM/conv2d_6/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_6/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_6/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_6/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_6/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_7/kernel/Adam/Assign"
  input: "^DAGM/conv2d_7/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_7/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_7/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_7/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_7/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_8/kernel/Adam/Assign"
  input: "^DAGM/conv2d_8/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_8/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_8/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_8/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_8/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_9/kernel/Adam/Assign"
  input: "^DAGM/conv2d_9/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_9/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_9/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_9/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_9/beta/Adam_1/Assign"
  input: "^DAGM/conv2d_10/kernel/Adam/Assign"
  input: "^DAGM/conv2d_10/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_10/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_10/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_10/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_10/beta/Adam_1/Assign"
  input: "^DAGM/dense/kernel/Adam/Assign"
  input: "^DAGM/dense/kernel/Adam_1/Assign"
  input: "^DAGM/batch_normalization_11/gamma/Adam/Assign"
  input: "^DAGM/batch_normalization_11/gamma/Adam_1/Assign"
  input: "^DAGM/batch_normalization_11/beta/Adam/Assign"
  input: "^DAGM/batch_normalization_11/beta/Adam_1/Assign"
  input: "^DAGM/dense_1/kernel/Adam/Assign"
  input: "^DAGM/dense_1/kernel/Adam_1/Assign"
  input: "^DAGM/dense_1/bias/Adam/Assign"
  input: "^DAGM/dense_1/bias/Adam_1/Assign"
}
versions {
  producer: 24
}
